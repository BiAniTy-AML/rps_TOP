@use './abstract/colors' as c;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: 16px;
}

@mixin up_down_animation($name, $amount) {
    @keyframes #{$name} {
        0%, 100% {
            transform: translateY(0);
            transition: ease;
        }

        50% {
            transform: translateY(-$amount);
            transition: ease;
        }
    }
}

@mixin side_to_side_animation ($name, $direction, $amount) {
    @keyframes #{$name} {
        0%, 100% {
            transform: translateX(0);
            opacity: 1;
        }

        1% {
            display: none;
        }

        33% {
            @if $direction == ltor {
                transform: translateX($amount);
            } @else if $direction == rtol {
                transform: translateX(-$amount);
            }
            opacity: 0;
        }

        66% {
            @if $direction == ltor {
                transform: translateX(-$amount);
            } @else if $direction == rtol {
                transform: translateX($amount);
            }
            opacity: 0;
        }
    }
}

body {
    background: c.$dark_background
}

button {
    border: none;
}

header {
    background: c.$light_background;
    padding: .7rem;

    display: flex;
    .game_title {
        font-weight: bold;
        font-size: 2rem;

        margin-left: auto;
    }

    .links {
        margin-left: auto;
        img {
            width: 50px;
        }
    }
}

button.skip {
    background-color: darken(c.$lavender, 30%);
    cursor: pointer;
    border: none;
    padding: 5px 20px 5px 10px;
    border-radius: 5px;

    position: fixed;

    top: 100px;
    left: 0;

    transform: translateX(-88%);

    transition: transform .3s ease-out;

    &.selected {
        background-color: c.$light_purple;
    }

    &:hover {
        transform: translateX(-3px);
    }
 }

.player.choices.collapsed {
    .card {
        transition: 
            transform 1s ease,
            opacity 1s ease,
            max-height 1s ease;
    }

    .card.chosen {
        pointer-events: none;
    }

    .card:not(.chosen) {
        z-index: -1;

        max-height: 0;
        opacity: 0;
    }
}

.cards {
    position: relative;

    display: flex;
    flex-flow: column nowrap;

    gap: 3rem;

    margin: 2rem 0;

    .player, .computer {
        margin: 0 auto;
        min-width: 80%;
        display: flex;
        flex-flow: column nowrap;
    }

    .player {
        gap: 1rem;
    }

    .computer {
        overflow: hidden;
        .card.ready {
            .symbol {
                animation: right_left 1.3s 4;
            }

            .type {
                animation: left_right 1.3s 4;
            }
        }

        .type {
            span {
                font-size: 2rem;
                animation: dots 2s infinite;

                // Animation does not work if span dispaly is inline
                display: inline-block
            }

            span:nth-child(1) {
                animation-delay: 0.3s;
            }

            span:nth-child(2) {
                animation-delay: 0.6s;
            }

            span:nth-child(3) {
                animation-delay: 0.9s;
            }
        }
    }


}

.card {
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;

    background: c.$lavender;
    border-radius: 10px;

    max-height: 200vh;
    transition: max-height 1s ease;

    &:not(.random):not(.chosen):hover {
        cursor: pointer;
        animation: card 3s infinite;

    }

    &:hover {
        background: darken(c.$lavender, 15%);
    }

    .symbol {
        font-size: 7rem;
    }

    .type {
        font-size: 2rem;
    }
}

.scores {
    user-select: none;

    display: flex;
    flex-flow: column nowrap;
    align-items: center;

    gap: 1rem;

   h1 {
        font-size: 3rem;
    } 

    .values {
        display: flex;
        justify-content: space-between;
        padding: 0 10px;

        align-self: stretch;

        .score {
           * {
                font-size: 2rem;
            } 

            .number {
                background: white;
                padding: 5px;
                border-radius: 13px;
            }
            
            display: flex;
            flex-flow: column nowrap;
            align-items: center;
        }
    }
}

.final_result {
    display: flex;
    flex-flow: column nowrap; 

    gap: 1rem;

    opacity: 0;
    max-height: 0;
    max-width: 0;

    transition: max-height 1s ease,
                opacity 1s ease;

    * {
        font-size: 0;
        font-weight: bold;
        pointer-events: none;

        // transition: font-size .5s ease-out;
    }

    .restart {
        border: none;
        padding: 0;
        border-radius: 3px;
        cursor: pointer;

        background: c.$light_purple;
    }

    &.visible {
        opacity: 1;
        max-width: 200vw;
        padding: 5px 10px;

        * {
            font-size: 2rem;
            pointer-events: all;
        }
    }
}


@media (min-width: 500px) {
    .cards {
        flex-flow: row nowrap;
        .player.choices {
            flex-flow: row nowrap;

            justify-content: space-evenly;
        }

        .player, .computer {
            min-width: 0;
        }

    }

    .card {
            min-width: 250px;
            min-height: 300px;
    }
}

@include up_down_animation(card, 30px);
@include up_down_animation(dots, 10px);

@include side_to_side_animation(right_left, rtol, 150vw);
@include side_to_side_animation(left_right, ltor, 150vw);
